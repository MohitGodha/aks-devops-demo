resources:
- repo: self

queue:
  name: Hosted Ubuntu 1604

steps:

- task: AzureResourceGroupDeployment@2
  displayName: 'Azure Deployment:Create Azure Container Registry'
  inputs:
    azureSubscription: 'cdw-kubernetes-20101023 - Service Endpoint'
    resourceGroupName: 'cdw-kubernetes-20101023'
    location: westus2
    csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
    overrideParameters: '-registryName "cdwkubernetes20101023" -registryLocation "East US" -registrySku "Basic"'

- task: Docker@0
  displayName: 'Build an image'
  inputs:
    azureSubscription: 'cdw-kubernetes-20101023 - Service Endpoint'
    azureContainerRegistry: cdwkubernetes20101023.azurecr.io
    imageName: 'cdwkubernetes20101023.azurecr.io/cdwkubernetes20101023:$(Build.BuildId)'

- task: Docker@0
  displayName: 'Push an image'
  inputs:
    azureSubscription: 'cdw-kubernetes-20101023 - Service Endpoint'
    azureContainerRegistry: '{"loginServer":"cdwkubernetes20101023.azurecr.io", "id" : "/subscriptions/b9c770d1-cde9-4da3-ae40-95ce1a4fac0c/resourceGroups/cdw-kubernetes-20101023/providers/Microsoft.ContainerRegistry/registries/cdwkubernetes20101023"}'
    action: 'Push an image'
    imageName: 'cdwkubernetes20101023.azurecr.io/cdwkubernetes20101023:$(Build.BuildId)'

- task: HelmInstaller@0
  displayName: 'Install Helm 2.9.1'
  inputs:
    kubectlVersion: 1.10.3
    checkLatestKubectl: false

- task: HelmDeploy@0
  displayName: 'helm package'
  inputs:
    azureSubscription: 'cdw-kubernetes-20101023 - Service Endpoint'
    azureResourceGroup: 'cdw-kubernetes-20101023'
    kubernetesCluster: 'cdw-kubernetes-20101023'
    command: package
    chartPath: '**/charts/sampleapp'
    save: false

- task: CopyFiles@2
  displayName: 'Copy ARM templates'
  inputs:
    SourceFolder: ArmTemplates
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts: drop'
